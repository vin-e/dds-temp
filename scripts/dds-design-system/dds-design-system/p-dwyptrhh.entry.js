import{r as t,h as s,c as i,H as n}from"./p-31571bfb.js";import{i as a,g as o}from"./p-29a3b85a.js";const e=new Map,c=class{constructor(s){t(this,s),this.isVisible=!1}connectedCallback(){this.waitUntilVisible()}disconnectedCallback(){this.io&&(this.io.disconnect(),this.io=void 0)}updateIcon(){this.isVisible&&this.loadIcon()}waitUntilVisible(){!a(this.el)&&window.IntersectionObserver?(this.io=new window.IntersectionObserver(t=>{t[0].isIntersecting&&(this.io.disconnect(),this.io=void 0,this.loadIcon())},{rootMargin:"50px"}),this.io.observe(this.el)):this.loadIcon()}async getSvgContent(t){let s=e.get(t);if(!e.has(t)){const i=await fetch(t);if(!i||i.status>=300)throw new Error("dds-icon requires a valid icon");const n=await i.text();e.set(t,s=n)}return s}async loadIcon(){const t=o(this.icon,this.src),s=await this.getSvgContent(t);this.el.innerHTML=s,this.el.firstElementChild.setAttribute("aria-hidden","true"),this.isVisible=!0}render(){const t=["dds-icon",this.icon&&!this.src?"dds-icon__"+this.icon:void 0].join(" ");return s(n,{role:"img",class:t})}static get assetsDirs(){return["icons"]}get el(){return i(this)}static get watchers(){return{icon:["updateIcon"],src:["updateIcon"]}}static get style(){return".dds-icon{display:inline-block;width:18px;height:18px}.dds-icon svg{vertical-align:middle;width:100%;height:100%}"}};export{c as dds_icon};