var e,n,l;!function(e){e.string="a",e.integer="i",e.decimal="f",e.biginteger="j",e.date="d"}(e||(e={})),function(e){e.and="&",e.or="|"}(n||(n={})),function(e){e.text="text",e.date="date",e.numeric="numeric"}(l||(l={}));const u={text:[e.string],date:[e.date],numeric:[e.integer,e.decimal,e.biginteger]},a=[{label:"equal to",value:"=",numberOfInputs:1,allowedTypes:[e.string,e.integer,e.decimal,e.biginteger,e.date],isFunction:!1},{label:"not equal to",value:"<>",numberOfInputs:1,allowedTypes:[e.string,e.integer,e.decimal,e.biginteger,e.date],isFunction:!1},{label:"before",value:"<",numberOfInputs:1,allowedTypes:[e.date],isFunction:!1},{label:"after",value:">",numberOfInputs:1,allowedTypes:[e.date],isFunction:!1},{label:"less than",value:"<",numberOfInputs:1,allowedTypes:[e.integer,e.decimal,e.biginteger],isFunction:!1},{label:"less than or equal to",value:"<=",numberOfInputs:1,allowedTypes:[e.integer,e.decimal,e.biginteger],isFunction:!1},{label:"greater than",value:">",numberOfInputs:1,allowedTypes:[e.integer,e.decimal,e.biginteger],isFunction:!1},{label:"greater than or equal to",value:">=",numberOfInputs:1,allowedTypes:[e.integer,e.decimal,e.biginteger],isFunction:!1},{label:"between",value:"between",numberOfInputs:2,allowedTypes:[e.integer,e.decimal,e.biginteger,e.date],isFunction:!0},{label:"contains",value:"contains",numberOfInputs:1,allowedTypes:[e.string],isFunction:!0},{label:"does not contain",value:"~contains",numberOfInputs:1,allowedTypes:[e.string],isFunction:!0},{label:"begins with",value:"beginswith",numberOfInputs:1,allowedTypes:[e.string],isFunction:!0},{label:"ends with",value:"endswith",numberOfInputs:1,allowedTypes:[e.string],isFunction:!0},{label:"N/A",value:"na",numberOfInputs:0,allowedTypes:[e.string,e.integer,e.decimal,e.biginteger,e.date],isFunction:!1},{label:"not N/A",value:"!na",numberOfInputs:0,allowedTypes:[e.string,e.integer,e.decimal,e.biginteger,e.date],isFunction:!1}];function t(e){return a.filter(n=>n.value===e)[0]}function s(e){return 0===t(e).numberOfInputs}function o(e){return 2===t(e).numberOfInputs}let i=0;function b(e={}){const l=i++;return Object.assign(Object.assign({},{column:"",opOrFun:"=",values:[""],andOr:n.and,id:l}),e)}export{n as A,u as C,l as a,s as b,b as c,e as d,t as g,o as i,a as o};